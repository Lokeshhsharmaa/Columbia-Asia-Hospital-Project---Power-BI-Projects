-- 15.	Identify the top 5 doctors who generated the most revenue but had the fewest patients. (SQL) 

select Doctor_Name, sum(Total_Bill) as revenue, count(patient_id) as patient_count from doctor_patients_data1
group by Doctor_Name
order by revenue desc, patient_count asc
limit 5;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

-- 16.	Find the department where the average waiting time has decreased over three consecutive months. (SQL) --

with AvgWaitTimeByMonth as (
    select `department_referral`, CONCAT(YEAR(date), '-', Month(date)) as YearMonth,  
        round(avg(patient_waittime),2) as AvgWaitTime
    from hospital
    group by `department_referral`, YearMonth
),

WaitTimeWithLag as (
    select `department_referral`,YearMonth, AvgWaitTime,
        lag(AvgWaitTime, 1) over (partition by department_referral order by YearMonth) as PrevMonthAvg,
        lag(AvgWaitTime, 2) over (partition by department_referral order by YearMonth) as TwoMonthsAgoAvg
    from AvgWaitTimeByMonth
)
select `department_referral` as Department_Name
from WaitTimeWithLag
where AvgWaitTime < PrevMonthAvg and PrevMonthAvg < TwoMonthsAgoAvg  
group by Department_Name;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

-- 17.	Determine the ratio of male to female patients for each doctor and rank the doctors based on this ratio. (SQL) --

with male_female_count as (
select dp.Doctor_Name, SUM(case when patient_gender = "F" then 1 else 0 end) as Female_count,
					   SUM(case when patient_gender = "M" then 1 else 0 end) as Male_count
from doctor_patients_data1 dp 
join hospital h on dp.patient_id = h.patient_id
group by dp.Doctor_Name
), 

ratioed_table as(
select Doctor_Name, Male_count,Female_count, ROUND((Male_count/Female_count),2) as male_to_female_ratio
from male_female_count)

select *, dense_rank() over(order by male_to_female_ratio desc) as ranked_by_ratio from ratioed_table;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

-- Q18. Calculate the average satisfaction score of patients for each doctor based on their visits. (SQL) --
Select d.Doctor_Name, round(avg(h.Patient_new_sat_score),2) as Avg_patient_sat_score
from hospital h 
join doctor_patients_data1 d 
on h.patient_id = d.patient_id
group by d.Doctor_Name
order by Avg_patient_sat_score desc;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

-- 19. Find doctors who have treated patients from different races and calculate the diversity of their patient base. (SQL)   -- 

select d.Doctor_Name as Doctor_Name, count(distinct h.patient_race) as differnet_race_count
from hospital h 
join doctor_patients_data1 d 
on h.patient_id = d.patient_id
group by 1
having count(distinct h.patient_race) >1
order by 2 desc;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

 -- 20.  Calculate the ratio of total bills generated by male patients to female patients for each department. (SQL)-- 

select h.department_referral,
sum(case when patient_gender = "M" then d.Total_Bill end) as male_total_bill,
sum(case when patient_gender = "F" then d.Total_Bill end) as Female_total_bill,
round(sum(case when patient_gender = "M" then d.Total_Bill end) / sum(case when patient_gender = "F" then d.Total_Bill end),2) 
as Male_To_Female_Ratio
FROM  hospital h 
join doctor_patients_data1 d 
on h.patient_id = d.patient_id
GROUP BY 1;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

-- 21 Update the patient satisfaction score for all patients who visited the "General Practice" department  
-- and had a waiting time of more than 30 minutes. Increase their satisfaction score by 2 points, 
-- but ensure that the satisfaction score does not exceed 10. (SQL) -- 

set SQL_SAFE_UPDATES = 0;

update hospital as h
set h.patient_sat_score = case 
        when h.Patient_new_sat_score + 2 > 10 then 10
        else h.Patient_new_sat_score + 2
    end
where h.department_referral = 'General Practice' and h.patient_waittime > 30; 

set SQL_SAFE_UPDATES = 1;
 
 Select Patient_new_sat_score from hospital;















  